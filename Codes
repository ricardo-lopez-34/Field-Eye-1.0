#include "esp_camera.h"
#include <SoftwareSerial.h>
#include <TinyGPS++.h>

// --------- CAMERA CONFIG ---------
#define PWDN_GPIO_NUM     -1
#define RESET_GPIO_NUM    -1
#define XCLK_GPIO_NUM      0
#define SIOD_GPIO_NUM     26
#define SIOC_GPIO_NUM     27

#define Y9_GPIO_NUM       35
#define Y8_GPIO_NUM       34
#define Y7_GPIO_NUM       39
#define Y6_GPIO_NUM       36
#define Y5_GPIO_NUM       21
#define Y4_GPIO_NUM       19
#define Y3_GPIO_NUM       18
#define Y2_GPIO_NUM        5
#define VSYNC_GPIO_NUM    25
#define HREF_GPIO_NUM     23
#define PCLK_GPIO_NUM     22

// --------- GPS CONFIG ---------
TinyGPSPlus gps;
HardwareSerial SerialGPS(1);  // Use UART1 for GPS
#define RXGPS 16
#define TXGPS 17

// --------- SIM800L CONFIG ---------
SoftwareSerial sim800(14, 12); // RX, TX for SIM800L

void setup() {
  Serial.begin(115200);
  SerialGPS.begin(9600, SERIAL_8N1, RXGPS, TXGPS);
  sim800.begin(9600);

  // Camera setup
  camera_config_t config;
  config.ledc_channel = LEDC_CHANNEL_0;
  config.ledc_timer = LEDC_TIMER_0;
  config.pin_d0 = Y2_GPIO_NUM;
  config.pin_d1 = Y3_GPIO_NUM;
  config.pin_d2 = Y4_GPIO_NUM;
  config.pin_d3 = Y5_GPIO_NUM;
  config.pin_d4 = Y6_GPIO_NUM;
  config.pin_d5 = Y7_GPIO_NUM;
  config.pin_d6 = Y8_GPIO_NUM;
  config.pin_d7 = Y9_GPIO_NUM;
  config.pin_xclk = XCLK_GPIO_NUM;
  config.pin_pclk = PCLK_GPIO_NUM;
  config.pin_vsync = VSYNC_GPIO_NUM;
  config.pin_href = HREF_GPIO_NUM;
  config.pin_sccb_sda = SIOD_GPIO_NUM;
  config.pin_sccb_scl = SIOC_GPIO_NUM;
  config.pin_pwdn = PWDN_GPIO_NUM;
  config.pin_reset = RESET_GPIO_NUM;
  config.xclk_freq_hz = 20000000;
  config.pixel_format = PIXFORMAT_JPEG;
  config.frame_size = FRAMESIZE_VGA;
  config.jpeg_quality = 15;
  config.fb_count = 2;

  esp_err_t err = esp_camera_init(&config);
  if (err != ESP_OK) {
    Serial.printf("Camera init failed with error 0x%x", err);
    return;
  }

  // SIM800L setup
  sendATCommand("AT");
  sendATCommand("AT+CMGF=1");  // Text mode
}

void loop() {
  // Capture GPS data
  while (SerialGPS.available() > 0) {
    gps.encode(SerialGPS.read());
  }

  if (millis() % 30000 < 1000) { // every 30 seconds
    sendImageWithLocation();
  }
}

void sendImageWithLocation() {
  // Capture image
  camera_fb_t * fb = esp_camera_fb_get();
  if (!fb) {
    Serial.println("Camera capture failed");
    return;
  }

  // GPS coordinates
  String lat = gps.location.isValid() ? String(gps.location.lat(), 6) : "0.0";
  String lon = gps.location.isValid() ? String(gps.location.lng(), 6) : "0.0";

  // Send image via MMS or HTTP (simplified)
  sim800.println("AT+CMGS=\"+YOUR_PHONE_NUMBER\""); 
  delay(1000);
  sim800.print("Image captured at Lat: " + lat + ", Lon: " + lon);
  sim800.write(26); // Ctrl+Z to send
  delay(5000);

  esp_camera_fb_return(fb);
}

// Helper function to send AT commands to SIM800L
void sendATCommand(String cmd) {
  sim800.println(cmd);
  delay(1000);
  while (sim800.available()) {
    Serial.write(sim800.read());
  }
}
